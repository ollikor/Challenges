{"version":3,"sources":["data.js","components/Modal.js","components/ModalChild.js","components/Crown.js","components/Card.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["bronze","name","statusMark","1","2","3","color","margin","silver","gold","diamond","4","quotes","quote","Modal","props","modalRoot","document","getElementById","el","createElement","useEffect","appendChild","removeChild","ReactDOM","createPortal","children","ModalChild","className","title","onClick","handleUpdate","icon","faCheck","handleDelete","faTrash","Crown","status","statusArea","percent","fixedDays","days","max","value","min","i","percentage","icons","crown","faCrown","style","index","push","faGem","setIcons","map","item","String","fromCharCode","position","zIndex","left","backgroundColor","width","maxWidth","height","borderRadius","progressBar","Card","useState","modal","showModal","startDate","checkStatus","update","newChallenges","JSON","parse","localStorage","getItem","filter","obj","id","setItem","stringify","updateState","App","console","log","Date","setQuote","challenge","setChallenge","text","setText","challenges","setChallenges","random","Math","floor","length","getQuote","date","getDate","getMonth","getFullYear","checkDay","lastLoggedDate","currentDate","newLastLoggedDate","UTC","newDate","onSubmit","dateString","now","saveChallege","type","placeholder","onChange","e","target","required","aria-label","faTimes","faPlus","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.7f9cb35a.chunk.js","sourcesContent":["  // Statuses\r\n  export const bronze = { name: 'Bronze', statusMark: {1: 0x2160, 2:0x2161 , 3:0x2162}, color: '#cd7f32', margin: '10px' }\r\n  export const silver = { name: 'Silver', statusMark: {1: 0x2160, 2:0x2161 , 3:0x2162}, color: '#C0C0C0', margin: '10px' }\r\n  export const gold = { name: 'Gold', statusMark: {1: 0x2160, 2:0x2161 , 3:0x2162}, color: '#FFDF00', margin: '10px' }\r\n  export const diamond = { name: 'Diamond', statusMark: {4: 0x2605}, color: '#66ccff', margin: '10px' }\r\n\r\n  export const quotes = [\r\n    {\r\n      quote: \"The way to get started is to quit talking and begin doing.\",\r\n      name: \"Walt Disney\"\r\n    },\r\n    {\r\n      quote: \"Just do it.\",\r\n      name: \"Nike\"\r\n    },\r\n    {\r\n      quote: \"The pessimist sees difficulty in every opportunity. The optimist sees the opportunity in every difficulty.\",\r\n      name: \"Winston Churchill\"\r\n    }\r\n  ]","import { useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nexport function Modal(props) {\r\n    const modalRoot = document.getElementById('modal-root');\r\n    const el = document.createElement('div');\r\n\r\n    useEffect(() => {\r\n        modalRoot.appendChild(el);\r\n        return () => {\r\n            modalRoot.removeChild(el);\r\n        };\r\n    });\r\n\r\n    return ReactDOM.createPortal(props.children, el);\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport function ModalChild(props) {\r\n    return (\r\n        <div className=\"Modal-container\">\r\n            <div className=\"Modal-content\">\r\n                <div className=\"Modal-title\">{props.title}</div>\r\n                <button className=\"Log-button\" onClick={() => props.handleUpdate()}>\r\n                    <div>Log</div> \r\n                    <FontAwesomeIcon icon={faCheck} />\r\n                </button>\r\n                <button className=\"Delete-button\" onClick={() => props.handleDelete()}>\r\n                    <div>Delete challenge</div>\r\n                    <FontAwesomeIcon icon={faTrash} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCrown, faGem } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport function Crown(props) {\r\n    const status = props.status;\r\n    let statusArea = status.statusArea;\r\n    const percent = percentage();\r\n    // Calculate past percentage of days in the correct statusarea\r\n    function percentage() {\r\n        let days = 0;\r\n        let fixedDays;\r\n        let percentage;\r\n\r\n        // If value is more than min, reduce min from value to get correct\r\n        // percentage of current statusarea. \r\n        // example value is 100 days, min is 80 and max 120 in the current statusarea. \r\n        // Without reduction value is more than days between min and max so percentage is over 100%.\r\n        if (status.max !== null) {\r\n            if (props.value > status.min) {\r\n                fixedDays = props.value - status.min;\r\n            } else {\r\n                fixedDays = props.value;\r\n            }\r\n\r\n            // Calculate days amount between min and max\r\n            for (let i = status.min; i <= status.max; i++) {\r\n                days = days + 1;\r\n            }\r\n\r\n            // Calculate past percentage of days\r\n            return percentage = fixedDays / days * 100;\r\n        } else {\r\n            return percentage = 100;\r\n        }\r\n    }\r\n\r\n    // Progressbar style\r\n    function progressBar(percent) {\r\n        return (\r\n            {\r\n                position: 'absolute',\r\n                zIndex: 10,\r\n                left: 0,\r\n                backgroundColor: '#0e8404',\r\n                width: `${percent}%`,\r\n                maxWidth: '100%',\r\n                height: '10px',\r\n                borderRadius: 0\r\n            }\r\n        )\r\n    }\r\n\r\n    function setIcons() {\r\n        let icons = [];\r\n        if (status.statusArea !== 4) {\r\n            const crown = <FontAwesomeIcon className=\"Icon\" icon={faCrown} style={status.status} />\r\n            for (let index = 0; index < status.statusArea; index++) {\r\n                icons.push(crown);\r\n            }\r\n        } else {\r\n            icons.push(<FontAwesomeIcon className=\"Icon\" icon={faGem} style={status.status} />);\r\n        }\r\n        return icons;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {setIcons().map((item, index) => (\r\n                <span key={index}>{item}</span>\r\n            ))}\r\n            <div className=\"Card-content\">{`${status.status.name} - ${String.fromCharCode(status.status.statusMark[statusArea])}`}</div>\r\n            <div className=\"Progress-bar\">\r\n                <span style={progressBar(percent)}></span>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import { useState } from 'react';\r\n\r\nimport { bronze, silver, gold, diamond } from '../data';\r\n\r\nimport { Modal } from \"./Modal\";\r\nimport { ModalChild } from './ModalChild';\r\nimport { Crown } from \"./Crown\";\r\n\r\nexport function Card(props) {\r\n\r\n  const [modal, showModal] = useState(false);\r\n\r\n  // Check if index of card is even and set correct background.\r\n  function background() {\r\n    if (props.index % 2 === 0) {\r\n      return {\r\n        backgroundColor: \"#ffffff\",\r\n      };\r\n    } else {\r\n      return {\r\n        backgroundColor: \"#555555\",\r\n        color: '#ffffff'\r\n      };\r\n    }\r\n  }\r\n\r\n  function checkStatus() {\r\n    let status;\r\n    let statusArea;\r\n    let min;\r\n    let max;\r\n\r\n    if (props.value >= 0 && props.value <= 40) {\r\n      status = bronze;\r\n      statusArea = 1;\r\n      min = 0;\r\n      max = 40;\r\n    }\r\n    else if (props.value >= 40 && props.value <= 80) {\r\n      status = bronze;\r\n      statusArea = 2;\r\n      min = 40;\r\n      max = 80;\r\n    }\r\n    else if (props.value >= 80 && props.value <= 120) {\r\n      status = bronze;\r\n      statusArea = 3;\r\n      min = 80;\r\n      max = 120;\r\n    }\r\n    else if (props.value >= 120 && props.value <= 160) {\r\n      status = silver;\r\n      statusArea = 1;\r\n      min = 120;\r\n      max = 160;\r\n    }\r\n    else if (props.value >= 160 && props.value <= 200) {\r\n      status = silver;\r\n      statusArea = 2;\r\n      min = 160;\r\n      max = 200;\r\n    }\r\n    else if (props.value >= 200 && props.value <= 240) {\r\n      status = silver;\r\n      statusArea = 3;\r\n      min = 200;\r\n      max = 240;\r\n    }\r\n    else if (props.value >= 240 && props.value <= 280) {\r\n      status = gold;\r\n      statusArea = 1;\r\n      min = 240;\r\n      max = 280;\r\n    }\r\n    else if (props.value >= 280 && props.value <= 320) {\r\n      status = gold;\r\n      statusArea = 2;\r\n      min = 280;\r\n      max = 320;\r\n    }\r\n    else if (props.value >= 320 && props.value <= 365) {\r\n      status = gold;\r\n      statusArea = 3;\r\n      min = 320;\r\n      max = 365;\r\n    } else if (props.value > 365) {\r\n      status = diamond;\r\n      statusArea = 4;\r\n      min = 365;\r\n      max = null;\r\n    }\r\n    return {\r\n      status,\r\n      statusArea,\r\n      min,\r\n      max\r\n    }\r\n  }\r\n\r\n  function handleDelete() {\r\n    const challenges = JSON.parse(localStorage.getItem(\"challenges\"));\r\n    const newChallenges = challenges.filter(obj => obj.id !== props.id);\r\n    localStorage.setItem(\"challenges\", JSON.stringify(newChallenges));\r\n    props.updateState(newChallenges);\r\n  }\r\n\r\n  return (\r\n    <div onClick={() => showModal(!modal)} className=\"Card\" style={background()}>\r\n      <div className=\"Card-content\">Started {props.startDate} - {props.value} days</div>\r\n      <h2 className=\"Card-title\">{props.title}</h2>\r\n      <Crown status={checkStatus()} value={props.value} />\r\n      { modal ?\r\n        <Modal>\r\n          <ModalChild\r\n            title={props.title}\r\n            handleUpdate={() =>props.update()}\r\n            handleDelete={() => handleDelete()}\r\n          />\r\n        </Modal>\r\n        : null}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { quotes } from \"./data\";\n\nimport { Card } from \"./components/Card\";\n\nimport \"./App.css\";\n\nexport function App() {\n  console.log(new Date)\n  const [quote, setQuote] = useState(null);\n  const [challenge, setChallenge] = useState(null);\n  const [text, setText] = useState(\"\");\n  const [challenges, setChallenges] = useState(null);\n\n  useEffect(() => {\n    getQuote();\n    const challenges = checkDay();\n    console.log(challenges);\n    setChallenges(challenges);\n  }, []);\n\n  function getQuote() {\n    const random = Math.floor(Math.random() * quotes.length);\n    quotes.map((item, index) => {\n      if (index === random) {\n        setQuote(item);\n      }\n    });\n  }\n\n  function checkDay() {\n    const date = new Date();\n    const dateString = `${date.getDate()}.${date.getMonth() + 1}.${date.getFullYear()}`;\n    const challenges = JSON.parse(localStorage.getItem(\"challenges\"));\n    // console.log(date);\n    // console.log(dateString);\n    // console.log(challenges);\n    return challenges;\n  }\n\n  function saveChallege() {\n    if (text !== \"\") {\n      // const date = new Date('2021-02-17T10:20:30Z');\n      const date = new Date();\n      const dateString = `${date.getDate()}.${date.getMonth() + 1}.${date.getFullYear()}`;\n      const challenges = JSON.parse(localStorage.getItem(\"challenges\"));\n\n      const challenge = {\n        id: Math.floor(Date.now() * Math.random()),\n        title: text,\n        startDate: dateString,\n        lastLoggedDate: date,\n        value: 0,\n      };\n\n      if (challenges !== null) {\n        localStorage.setItem(\"challenges\", JSON.stringify([...challenges, challenge]));\n        setChallenges([\n          ...challenges,\n          challenge\n        ]);\n      } else {\n        localStorage.setItem(\"challenges\", JSON.stringify([challenge]));\n        setChallenges([challenge]);\n      }\n      setChallenge(false);\n    }\n  }\n\n  function update(id) {\n    const currentDate = new Date();\n    const challenges = JSON.parse(localStorage.getItem(\"challenges\"));\n    \n    const newChallenges = challenges.map(obj => {\n      let lastLoggedDate = new Date(obj.lastLoggedDate);\n      const newLastLoggedDate = new Date(Date.UTC(lastLoggedDate.getFullYear(),lastLoggedDate.getMonth(),lastLoggedDate.getDate()));\n      const newDate = new Date(Date.UTC(currentDate.getFullYear(),currentDate.getMonth(),currentDate.getDate()));\n         if (obj.id === id && newLastLoggedDate < newDate) {\n          return { ...obj, value: obj.value + 1, lastLoggedDate: new Date() }\n        } else {\n        return obj\n      }\n    });\n    localStorage.setItem(\"challenges\", JSON.stringify(newChallenges));\n    setChallenges(newChallenges)\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 className=\"Header-title\">Challenges</h1>\n        {quote !== null ?\n          <div>\n            <p className=\"Quote-title\">{quote.quote}</p>\n            <p className=\"Quote-name\">{quote.name}</p>\n          </div>\n          : null\n        }\n      </header>\n      {challenges !== null ?\n        challenges.map((item, index) => (\n          <Card\n            key={index}\n            index={index}\n            id={item.id}\n            title={item.title}\n            startDate={item.startDate}\n            lastLoggedDate={item.lastLoggedDate}\n            value={item.value}\n            update={() => update(item.id)}\n            updateState={(challenges) => setChallenges(challenges)}\n          />\n        ))\n        : null}\n      <div className=\"Add-challenge-container\">\n        {challenge ? (\n          <form className=\"Add-challenge\" onSubmit={() => saveChallege()}>\n            <input\n              className=\"Challenge-input\"\n              type=\"text\"\n              placeholder=\"Add challenge\"\n              onChange={(e) => setText(e.target.value)}\n              required\n            />\n            <input type=\"submit\" className=\"Save-button\" value=\"Save\" />\n          </form>\n        ) : null}\n        <button\n          aria-label=\"button\"\n          className=\"Plus-button\"\n          onClick={() => setChallenge(!challenge)}\n        >\n          {\n            challenge === true ?\n              <FontAwesomeIcon icon={faTimes} />\n              :\n              <FontAwesomeIcon icon={faPlus} />\n          }\n        </button>\n      </div>\n    </div>\n  );\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}